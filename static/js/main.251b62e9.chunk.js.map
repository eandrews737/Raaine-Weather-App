{"version":3,"sources":["assets/svg/protection.svg","assets/svg/404-error.svg","redux/reducers/dark-sky-reducer.js","redux/store.js","env.js","util/api-util.js","util/weather-util.js","Components/today-weather-component.js","Components/weekly-forecast-component.js","Components/weather-page-component.js","Components/header-component.js","Components/footer-component.js","Components/not-found-component.js","App.js","serviceWorker.js","index.js","assets/animated/cloudy.svg","assets/animated/day.svg","assets/animated/night.svg","assets/animated/rainy-1.svg","assets/animated/snowy-1.svg","assets/animated/snowy-2.svg","assets/animated/cloudy-day-2.svg","assets/animated/cloudy-night-2.svg","assets/animated/snowy-3.svg","assets/animated/thunder.svg","assets/animated/weather.svg","assets/svg/cold.svg","assets/svg/warm.svg"],"names":["module","exports","__webpack_require__","p","initialState","locationInfo","darkSkyJson","coordinatesAddress","createStore","state","arguments","length","undefined","action","type","value","Object","objectSpread","DARK_SKY_API_KEY","OPENCAGE_API_KEY","getWeatherByCoordinates","coordinates","axios","get","concat","then","Response","data","catch","error","console","temperatureConversion","temperature","Math","round","getWeatherStatusIcon","status","clearDayIcon","clearNightIcon","rainIcon","snowIcon","sleekIcon","cloudyIcon","cloudyDayIcon","cloudyNightIcon","hailIcon","thunderstormIcon","tornadoIcon","TodayWeatherComponent","_this$props","this","props","currently","react_default","a","createElement","className","style","color","fontSize","city","county","neighborhood","country","state_code","moment","time","format","Tooltip_default","float","height","title","icon","placement","src","summary","Grid_default","container","paddingLeft","paddingTop","paddingBottom","justify","spacing","item","sm","class","precipProbability","humidity","windSpeed","uvIndex","React","Component","connect","WeeklyForecastComponent","withStyles","theme","head","backgroundColor","palette","common","black","white","body","TableCell","classes","sevenDayForecast","daily","slice","root","direction","alignItems","map","day","index","grid","key","Card_default","card","CardContent_default","dayByNumber","dayOfWeek","isoWeekday","paddingRight","warmIcon","temperatureHigh","coldIcon","temperatureLow","flexGrow","maxWidth","minWidth","marginRight","marginLeft","CurrentWeatherComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","latitude","longitude","handleFreshReload","dispatch","results","_this2","setState","lat","lon","longtidude","components","Fragment","today_weather_component","weekly_forecast_component","CircularProgress_default","marginTop","HeaderComponent","Toolbar_default","appIcon","Typography_default","variant","FooterComponent","id","withRouter","NotFoundComponent","errorIcon","createMuiTheme","primary","main","secondary","thirdary","fourthary","danger","App","styles","react_router_dom","basename","header_component","react_router","exact","path","component","WeatherPageComponent","NotfoundComponent","footer_component","Boolean","window","location","hostname","match","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.251b62e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/protection.592f7324.svg\";","module.exports = __webpack_public_path__ + \"static/media/404-error.0273c0b9.svg\";","const initialState = {\r\n  locationInfo: {},\r\n  darkSkyJson: {},\r\n  coordinatesAddress: {}\r\n};\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_LOCATION\":\r\n      return {\r\n        locationInfo: action.value\r\n      };\r\n    case \"DARK_SKY\":\r\n      return {\r\n        ...state,\r\n        darkSkyJson: action.value\r\n      };\r\n    case \"SET_ADDRESS\":\r\n      return {\r\n        ...state,\r\n        coordinatesAddress: action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducers/dark-sky-reducer\";\r\n\r\nexport default createStore(reducer);\r\n","export const DARK_SKY_API_KEY = \"95ab79346d76ac075f35b992f9f53396\";\r\n\r\nexport const OPENCAGE_API_KEY = \"b0b9dc1d23e04731a7ddf413da57f4d0\";\r\n","import axios from \"axios\";\r\nimport { DARK_SKY_API_KEY, OPENCAGE_API_KEY } from \"../env.js\";\r\n\r\nexport function getWeatherByCoordinates(coordinates = \"42.3601,-71.0589\") {\r\n  return axios\r\n    .get(\r\n      `https://cors.io/?https://api.darksky.net/forecast/${DARK_SKY_API_KEY}/${coordinates}`\r\n    )\r\n    .then(Response => {\r\n      return Response.data;\r\n    })\r\n    .catch(error => console.error(error));\r\n}\r\n\r\nexport function getCoordinatesbyIp() {\r\n  return axios\r\n    .get(`http://ip-api.com/json`)\r\n    .then(Response => {\r\n      return Response.data;\r\n    })\r\n    .catch(error => console.error(error));\r\n}\r\n\r\n// forward geocoding\r\n// city -> coordinates converter\r\nexport function getCoordinatesFromCity(address) {\r\n  return axios\r\n    .get(\r\n      `https://api.opencagedata.com/geocode/v1/json?key=${OPENCAGE_API_KEY}&q=${address}`\r\n    )\r\n    .then(Response => {\r\n      return Response.data;\r\n    })\r\n    .catch(error => console.error(error));\r\n}\r\n\r\n// reverse geocoding\r\n// coordinates -> city converter\r\nexport function getCityFromCoordinates(latitude, longtidude) {\r\n  return axios\r\n    .get(\r\n      `https://api.opencagedata.com/geocode/v1/json?key=${OPENCAGE_API_KEY}&q=${latitude}%2C${longtidude}&pretty=1`\r\n    )\r\n    .then(Response => {\r\n      return Response.data;\r\n    })\r\n    .catch(error => console.error(error));\r\n}\r\n","import clearDayIcon from \"../assets/animated/day.svg\";\r\nimport clearNightIcon from \"../assets/animated/night.svg\";\r\nimport rainIcon from \"../assets/animated/rainy-1.svg\";\r\nimport snowIcon from \"../assets/animated/snowy-1.svg\";\r\nimport sleekIcon from \"../assets/animated/snowy-2.svg\";\r\nimport fogIcon from \"../assets/animated/cloudy.svg\";\r\nimport cloudyIcon from \"../assets/animated/cloudy.svg\";\r\nimport cloudyDayIcon from \"../assets/animated/cloudy-day-2.svg\";\r\nimport cloudyNightIcon from \"../assets/animated/cloudy-night-2.svg\";\r\nimport hailIcon from \"../assets/animated/snowy-3.svg\";\r\nimport thunderstormIcon from \"../assets/animated/thunder.svg\";\r\nimport tornadoIcon from \"../assets/animated/weather.svg\";\r\n\r\n// returns day of the week by name\r\nexport function dayOfWeek(dayByNumber) {\r\n  switch (dayByNumber) {\r\n    case 0:\r\n      return \"Sun\";\r\n    case 1:\r\n      return \"Mon\";\r\n    case 2:\r\n      return \"Tue\";\r\n    case 3:\r\n      return \"Wed\";\r\n    case 4:\r\n      return \"Thu\";\r\n    case 5:\r\n      return \"Fri\";\r\n    case 6:\r\n      return \"Sat\";\r\n    case 7:\r\n      return \"Sun\";\r\n  }\r\n}\r\n\r\n// returns temperature based on selected scale\r\nexport function temperatureConversion(temperature, isFahrenheit = true) {\r\n  if (isFahrenheit) return Math.round(temperature) + `${`\\xB0`}`;\r\n  else return Math.round(temperature * (5 / 9) - 32) + `${`\\xB0`}`;\r\n}\r\n\r\n// returns the correct icon for each weather status\r\nexport function getWeatherStatusIcon(status) {\r\n  switch (status) {\r\n    case \"clear-day\":\r\n      return clearDayIcon;\r\n    case \"clear-night\":\r\n      return clearNightIcon;\r\n    case \"rain\":\r\n      return rainIcon;\r\n    case \"snow\":\r\n      return snowIcon;\r\n    case \"sleet\":\r\n      return sleekIcon;\r\n    case \"wind\":\r\n      return cloudyIcon;\r\n    case \"fog\":\r\n      return fogIcon;\r\n    case \"cloudy\":\r\n      return cloudyIcon;\r\n    case \"partly-cloudy-day\":\r\n      return cloudyDayIcon;\r\n    case \"partly-cloudy-night\":\r\n      return cloudyNightIcon;\r\n    case \"hail\":\r\n      return hailIcon;\r\n    case \"thunderstorm\":\r\n      return thunderstormIcon;\r\n    case \"tornado\":\r\n      return tornadoIcon;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as moment from \"moment\";\r\nimport {\r\n  temperatureConversion,\r\n  getWeatherStatusIcon\r\n} from \"../util/weather-util\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass TodayWeatherComponent extends React.Component {\r\n  render() {\r\n    const {\r\n      darkSkyJson: { currently },\r\n      coordinatesAddress\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"current-weather-component\">\r\n        <div>\r\n          <h3 style={{ color: \"gray\" }}>Your Location:</h3>\r\n          <div style={{ fontSize: \"25px\" }}>\r\n            <b>\r\n              {coordinatesAddress.city\r\n                ? coordinatesAddress.city\r\n                : coordinatesAddress.county || coordinatesAddress.neighborhood}\r\n              ,{\" \"}\r\n              {coordinatesAddress.country === \"USA\"\r\n                ? coordinatesAddress.state_code\r\n                : coordinatesAddress.country}\r\n            </b>\r\n          </div>\r\n          <div>{moment.unix(currently.time).format(\"llll\")}</div>\r\n          <Tooltip\r\n            style={{ float: \"right\", height: \"180px\" }}\r\n            title={currently.icon}\r\n            placement=\"right\"\r\n          >\r\n            <img src={getWeatherStatusIcon(currently.icon)} />\r\n          </Tooltip>\r\n        </div>\r\n        <div>\r\n          <div className=\"current-weather-temp important-text\">\r\n            {temperatureConversion(currently.temperature)}F\r\n          </div>\r\n          <div>{currently.summary}</div>\r\n        </div>\r\n        <Grid\r\n          container\r\n          style={{\r\n            paddingLeft: \"200px\",\r\n            paddingTop: \"20px\",\r\n            paddingBottom: \"20px\",\r\n            float: \"right\"\r\n          }}\r\n          justify=\"center\"\r\n          spacing={24}\r\n        >\r\n          <Grid item sm={3}>\r\n            <b style={{ fontSize: \"13px\" }}>Percipitation</b>\r\n            <div\r\n              class=\"important-text subheader-text\r\n          \r\n        \"\r\n            >\r\n              {Math.round(currently.precipProbability * 100)}%\r\n            </div>\r\n          </Grid>\r\n          <Grid item sm={3}>\r\n            <b style={{ fontSize: \"13px\" }}>Humidity </b>\r\n            <div class=\"important-text subheader-text\">\r\n              {Math.round(currently.humidity * 100)}%\r\n            </div>\r\n          </Grid>\r\n          <Grid item sm={3}>\r\n            <b style={{ fontSize: \"13px\" }}>Wind Speed </b>\r\n            <div class=\"important-text subheader-text\">\r\n              {Math.round(currently.windSpeed)} MPH\r\n            </div>\r\n          </Grid>\r\n          <Grid item sm={3}>\r\n            <b style={{ fontSize: \"13px\" }}>UV Index </b>\r\n            <div class=\"important-text subheader-text\">\r\n              {Math.round(currently.uvIndex)} mW\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  darkSkyJson: state.darkSkyJson,\r\n  coordinatesAddress: state.coordinatesAddress\r\n});\r\n\r\nexport default connect(mapStateToProps)(TodayWeatherComponent);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as moment from \"moment\";\r\n\r\nimport {\r\n  dayOfWeek,\r\n  temperatureConversion,\r\n  getWeatherStatusIcon\r\n} from \"../util/weather-util\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport coldIcon from \"../assets/svg/cold.svg\";\r\nimport warmIcon from \"../assets/svg/warm.svg\";\r\n\r\n// customized material UI table cell\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst styles = theme => {\r\n  return {\r\n    root: { flexGrow: 1 },\r\n    grid: {\r\n      paddingTop: \"20px\",\r\n      maxWidth: \"350px\",\r\n      minWidth: \"300px\",\r\n      marginRight: \"1%\",\r\n      marginLeft: \"1%\"\r\n    },\r\n    card: {\r\n      minWidth: \"200px\",\r\n      backgroundColor: \"#403d3d\"\r\n    }\r\n  };\r\n};\r\n\r\nclass WeeklyForecastComponent extends React.Component {\r\n  render() {\r\n    const { classes, darkSkyJson } = this.props;\r\n    let sevenDayForecast = [];\r\n\r\n    // tomorrow - a week today\r\n    if (darkSkyJson.daily)\r\n      sevenDayForecast = darkSkyJson.daily.data.slice(2, 8);\r\n\r\n    return (\r\n      <Grid\r\n        style={{ paddingBottom: \"150px\", backgroundColor: \"#13131b\" }}\r\n        container\r\n        className={classes.root}\r\n        spacing={3}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        {sevenDayForecast.map((day, index) => (\r\n          <Grid item className={classes.grid} sm={4} key={index}>\r\n            <Card className={classes.card} style={{ color: \"black\" }}>\r\n              <CardContent>\r\n                <div>\r\n                  <div>\r\n                    <b className=\"card-header-title\">\r\n                      {dayOfWeek(moment.unix(day.time).isoWeekday())}\r\n                    </b>\r\n                    <div className=\"card-header-subtitle\">\r\n                      {moment.unix(day.time).format(\"MMM DD\")}\r\n                    </div>\r\n                  </div>\r\n                  <Tooltip title={day.icon} placement=\"bottom\">\r\n                    <img\r\n                      style={{ height: \"140px\", float: \"right\" }}\r\n                      src={getWeatherStatusIcon(day.icon)}\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n                <div style={{ paddingTop: \"20px\", paddingRight: \"50px\" }}>\r\n                  <div>\r\n                    <b className=\"high-temp-font\">\r\n                      {\" \"}\r\n                      <img style={{ height: \"40px\" }} src={warmIcon} />\r\n                      {temperatureConversion(day.temperatureHigh)}F\r\n                    </b>\r\n                  </div>\r\n                  <div className=\"low-temp-font\">\r\n                    <img style={{ height: \"40px\" }} src={coldIcon} />\r\n                    {temperatureConversion(day.temperatureLow)}F\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  darkSkyJson: state.darkSkyJson,\r\n  coordinatesAddress: state.coordinatesAddress\r\n});\r\n\r\nexport default connect(mapStateToProps)(\r\n  withStyles(styles)(WeeklyForecastComponent)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getWeatherByCoordinates,\r\n  getCoordinatesbyIp,\r\n  getCityFromCoordinates\r\n} from \"../util/api-util\";\r\nimport TodayWeatherComponent from \"./today-weather-component\";\r\nimport WeeklyForecastComponent from \"./weekly-forecast-component\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass CurrentWeatherComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latitude: \"28.538336\",\r\n      longitude: \"-81.379234\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleFreshReload();\r\n  }\r\n\r\n  // get data on reload\r\n  // by default search by IP\r\n  async handleFreshReload() {\r\n    const { dispatch } = this.props;\r\n\r\n    // get location by ip\r\n    await getCoordinatesbyIp()\r\n      .then(results => {\r\n        this.setState({ latitude: results.lat, longitude: results.lon });\r\n      })\r\n      .catch(error => console.error(error));\r\n\r\n    // load dark sky results in props\r\n    // send the user to the next page\r\n    await getWeatherByCoordinates(\r\n      `${this.state.latitude},${this.state.longitude}`\r\n    )\r\n      .then(results => {\r\n        dispatch({ type: \"DARK_SKY\", value: results });\r\n      })\r\n      .catch(error => console.error(error));\r\n\r\n    // get the address of the IP\r\n    await getCityFromCoordinates(this.state.latitude, this.state.longitude)\r\n      .then(results => {\r\n        dispatch({ type: \"SET_ADDRESS\", value: results.results[0].components });\r\n      })\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  render() {\r\n    const { darkSkyJson, coordinatesAddress } = this.props;\r\n\r\n    // make sure all bases are covered\r\n    if (\r\n      darkSkyJson &&\r\n      darkSkyJson.daily &&\r\n      coordinatesAddress &&\r\n      coordinatesAddress.country\r\n    )\r\n      return (\r\n        <React.Fragment>\r\n          <TodayWeatherComponent />\r\n          <WeeklyForecastComponent />\r\n        </React.Fragment>\r\n      );\r\n    else return <CircularProgress style={{ marginTop: \"15vh\" }} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  coordinatesAddress: state.coordinatesAddress,\r\n  darkSkyJson: state.darkSkyJson\r\n});\r\n\r\nexport default connect(mapStateToProps)(CurrentWeatherComponent);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport appIcon from \"../assets/svg/protection.svg\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    color: \"white\"\r\n  }\r\n};\r\n\r\nclass HeaderComponent extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Toolbar>\r\n          <div className=\"white-circle\">\r\n            <img style={{ height: \"35px\", paddingTop: \"7px\" }} src={appIcon} />\r\n          </div>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Raaine\r\n          </Typography>\r\n        </Toolbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(HeaderComponent);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass FooterComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"footer\" className=\"App-footer\">\r\n        <div style={{ backgroundColor: \"#ed5121\" }} className=\"footer-stripe\" />\r\n        <div style={{ backgroundColor: \"#f9a500\" }} className=\"footer-stripe\" />\r\n        <div style={{ backgroundColor: \"#00b6ef\" }} className=\"footer-stripe\" />\r\n        <div style={{ backgroundColor: \"#6dd5f4\" }} className=\"footer-stripe\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  darkSkyJson: state.darkSkyJson,\r\n  coordinatesAddress: state.coordinatesAddress\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(FooterComponent));\r\n","import React from \"react\";\r\nimport errorIcon from \"../assets/svg/404-error.svg\";\r\n\r\nclass NotFoundComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img style={{ height: \"350px\", paddingTop: \"10%\" }} src={errorIcon} />\r\n        <h3>Go back traveler, you've gone too far</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFoundComponent;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport WeatherPageComponent from \"./Components/weather-page-component\";\r\nimport HeaderComponent from \"./Components/header-component\";\r\nimport FooterComponent from \"./Components/footer-component\";\r\nimport NotfoundComponent from \"./Components/not-found-component\";\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: \"#FA991C\" },\r\n    secondary: { main: \"#FC4445\" },\r\n    thirdary: \"#eeeeee\",\r\n    fourthary: \"#eeeeee\"\r\n  },\r\n  status: {\r\n    danger: \"orange\"\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MuiThemeProvider theme={theme}>\r\n        <Router basename=\"/\">\r\n          <HeaderComponent />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={WeatherPageComponent} />\r\n            <Route component={NotfoundComponent} />\r\n          </Switch>\r\n          <FooterComponent />\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App style={{ backgroundColor: \"black\" }} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/cloudy.66927525.svg\";","module.exports = __webpack_public_path__ + \"static/media/day.255a951b.svg\";","module.exports = __webpack_public_path__ + \"static/media/night.644849c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-1.63ae52f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-1.9c9caa01.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-2.6ad23580.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-day-2.eb5ccd91.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night-2.bfb351b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-3.7e41a803.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.c6779920.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather.53c3118d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cold.9cfb59f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/warm.97a00f6a.svg\";"],"sourceRoot":""}